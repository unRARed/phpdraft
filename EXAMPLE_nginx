# Example NGINX Configuration
# This is an example of what is required in order to get PHPDraft to run on NGINX.
# This config also uses PHP-FPM 7.0 so paths may very there.
# Mileage may vary.

#Server block #1: forward any non-HTTPS requests to the third server block.
server {
        listen 80 default_server;
        listen [::]:80 default_server;

        #Change the domain below to the domain name or IP address the site will run off of
        server_name phpdraft.com;

        #We want NGINX to forward to the https version, along with a 301 status to indicate a permanent redirect
        #Be sure to change domain below to the correct one, without "www"
        return 301 https://phpdraft.com$request_uri;
}

#Server block #2: forward any HTTPS or non-HTTPS requests to the "www" subdomain to the third server block
server {
        listen 80;
        listen [::]:80;
        listen 443 ssl http2;

        server_name www.phpdraft.com;

        ssl_certificate /etc/nginx/ssl/your_ssl_certificate.crt;
        ssl_certificate_key /etc/nginx/ssl/your_ssl_private.key;

        return 301 https://phpdraft.com$request_uri;
}

#Server block #3: serve the Angular app via index.html, Silex API thru /api, files/media as-is
server {
        listen 443 ssl http2;

        #Change the absolute path below to the base directory that PHP Draft lives
        root /var/www/example.com/html;

        index index.html;

        #Change the domain below to the domain name or IP address the site will run off of
        #NOTE: the "www" subdomain is purposefully left off. In the first server block, we are explicitly
        #choosing to forward 
        server_name example.com;

        #Change both paths below to point to both the SSL certificate and the private key you have on the server:
        ssl_certificate /etc/nginx/ssl/your_ssl_certificate.crt;
        ssl_certificate_key /etc/nginx/ssl/your_ssl_private.key;

        location /api/ {
                try_files $uri /api/bootstrap.php$is_args$args;
        }

        #Ensure the path passed to fastcgi_pass below matches up with where php-fpm lives
        location ~* \.php$ {
                include snippets/fastcgi-php.conf;
                fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
        }

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ index.html;
        }

        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
                root /usr/share/nginx/html;
        }

        location ~ /\.ht {
                deny all;
        }
}